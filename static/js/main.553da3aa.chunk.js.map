{"version":3,"sources":["components/Stockadder.js","components/modals/buy.js","components/Watchlist.js","components/Graph.js","components/modals/SellConfirmation.js","components/Portfolio.js","components/modals/error.js","components/History.js","App.js","serviceWorker.js","index.js"],"names":["Stockadder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeTick","e","setState","ticker","target","value","handleChangeVolume","volume","submitHandler","preventDefault","stocksArr","stocks","map","item","state","indexOf","addStock","updateHandler","updateStocks","addFive","disabledBtnHandler","react_default","a","createElement","className","type","onChange","placeholder","id","onClick","length","Component","Buy","handleChange","timeOfPurchase","time","price","currentPrice","concat","Date","now","handleBuy","modalOK","handleClose","console","log","timeOfSell","style","position","top","bottom","left","right","backgroundColor","zIndex","borderRadius","border","width","height","margin","marginTop","modalMessage","Math","round","toLocaleString","Watchlist","deleteHandler","deleteStock","showGraphHandler","showGraph","name","buyHandler","objectSpread","showBuyModal","_this2","buy","watchlist","findIndex","prices","times","updatePortfolioData","keys","undefined","asset","key","onMouseOver","Graph","finalGraphData","labels","datasets","label","data","graphData","portfolioData","borderColor","pointRadius","pointHitRadius","display","cubicInterpolationMode","responsive","maintainAspectRatio","es","options","title","text","fontSize","elements","line","tension","scales","xAxes","displayFormats","minute","legend","SellConfirmation","sellReject","stock","sellApproved","Portfolio","sellHandler","portfolio","filter","showSellConfirmation","sellStock","portfolioPurchasePrice","i","portfolioValue","modals_SellConfirmation","Error","History","toggleSwitch","toggleOn","totalInvested","history","reduce","b","totalCurrentValue","hoverHandler","App","errorClose","showError","alert","stockDisplay","updateHistory","newPort","setTimeout","newHistory","newPortfolio","JSON","parse","stringify","sellIndex","splice","pricesSumArray","portfolioIndexes","u","push","_loop","pricesProd","_loop2","buyTime","slice","priceSum","unshift","portfolioCopy","toConsumableArray","asyncToGenerator","regenerator_default","mark","_callee","_loop3","wrap","_context2","prev","next","apiSummary","showStockadder","apiData","_context","axios","get","then","res","reverse","parseFloat","catch","error","stop","delegateYield","components_Stockadder","components_Watchlist","components_Graph","components_Portfolio","components_History","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.553da3aa.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Stockadder extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ticker: '',\r\n            volume: 0\r\n        }\r\n    }\r\n  \r\n\r\n  handleChangeTick= (e) => {\r\n    this.setState({ticker: e.target.value})\r\n  }\r\n  handleChangeVolume = (e) => {\r\n    this.setState({ volume: e.target.value })\r\n  }\r\n\r\nsubmitHandler = (e) => {\r\n  e.preventDefault()\r\n  let stocksArr = this.props.stocks.map(item => item.ticker)\r\n  if (this.state.ticker !== '' && stocksArr.indexOf(this.state.ticker) === -1)\r\n  {this.props.addStock(this.state)}\r\n}\r\n\r\nupdateHandler = (e) => {\r\n  e.preventDefault()\r\n  this.props.updateStocks()\r\n}\r\n\r\naddFive = (e) => {\r\n  e.preventDefault()\r\n  this.setState({\r\n    stocks: [{ ticker: 'TSLA' }, { ticker: 'AAPL' }, { ticker: 'GOOGL' }, { ticker: 'AMZN' }, { ticker: 'NVO' }]\r\n  })\r\n  this.props.addFive()\r\n}\r\ndisabledBtnHandler= (e) => {\r\n  e.preventDefault()\r\n}\r\n  render() {\r\n    return (\r\n      <div className=\"stockadder watchlist-inside-wrap\">\r\n      <h2>Watchlist</h2>\r\n        <form>\r\n            <input type=\"text\" onChange={this.handleChangeTick} placeholder=\"Add up to 5 assets...\" id=\"stockticker\">                                   \r\n            </input>\r\n            <button className=\"fromBtn Btn\" type=\"submit\" onClick={this.submitHandler}>Add</button>\r\n          <button className=\"fromBtn Btn\" onClick={this.addFive}>Im feeling lucky</button>\r\n            <br></br>\r\n          {!(this.props.stocks.length > 0) ? <button className=\"startsimBtnNo\" onClick={this.disabledBtnHandler} >Start simulator</button> : <button className=\"startsimBtnReady Btn\" onClick={this.updateHandler}>Start simulator</button>}\r\n        </form> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stockadder\r\n","import React, { Component } from 'react'\r\n\r\nclass Buy extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            volume: 0,\r\n            timeOfPurchase: 0,\r\n            price: 0,\r\n            currentPrice: 0,\r\n            timeOfSell: \"still held\"\r\n        }\r\n    }\r\nhandleChange = (e) => {\r\n    this.setState({\r\n        volume: e.target.value,\r\n        ticker: this.props.ticker,\r\n        timeOfPurchase: this.props.time,\r\n        price: this.props.price,\r\n        currentPrice: this.props.price,\r\n        id: `${this.props.ticker}+${Date.now()}`\r\n\r\n    })\r\n}\r\n\r\nhandleBuy = (e) => {\r\n    e.preventDefault()\r\n    if(this.state.volume > 0) {this.props.handleBuy(this.state)}\r\n    this.props.modalOK()\r\n}\r\nhandleClose = (e) => {\r\n    e.preventDefault()\r\n    console.log(e.target)\r\n    if(e.target.className !== 'modal')\r\n   { this.props.handleClose()}\r\n}\r\n    \r\n  render() {\r\n      const backgroundStyle = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'rgba(0,0,0,0.5)',\r\n        zIndex: 100\r\n      }\r\n      const modalStyle = {\r\n        backgroundColor: \"#22201e\",\r\n        borderRadius: 3,\r\n        border: \"2px solid orange\",\r\n        width: 450,\r\n        height: 75,\r\n        margin: 'auto',\r\n        marginTop: 250,\r\n        position: 'relative',\r\n        zIndex: 101\r\n      }\r\n\r\n\r\n\r\n    return (\r\n      <div onClick={this.handleClose} style={backgroundStyle}>\r\n        <div className=\"modal-form modal\" style={modalStyle}>\r\n        <h3 className=\"modal\">{this.props.modalMessage}</h3>\r\n            <div >\r\n                <form ><span className=\"modal\">{this.props.ticker}</span><span className=\"modal\">${this.props.price}</span>\r\n                        <input className=\"modal\" onChange={this.handleChange} type=\"number\" placeholder=\"Volume\"></input> <span className=\"modal\">{Math.round(this.props.price*this.state.volume).toLocaleString()}$</span>\r\n                    <button className=\"BuyBtn modal-BuyBtn\" onClick={this.handleBuy}>Buy</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Buy\r\n","import React, { Component } from 'react'\r\nimport Buy from './modals/buy'\r\n\r\nclass Watchlist extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            ticker: '',\r\n            volume: 0,\r\n            showBuyModal: false,\r\n\r\n        }\r\n    }\r\n\r\ndeleteHandler = (e) => {\r\ne.preventDefault()\r\nthis.props.deleteStock(e.target.id)\r\n}\r\nshowGraphHandler = (e) => {\r\n  e.preventDefault()\r\n  this.props.showGraph(e.target.name)\r\n}\r\nbuyHandler = (e) => {\r\n  e.preventDefault()\r\n  this.setState({\r\n    ...this.state, showBuyModal: !this.state.showBuyModal, ticker: e.target.name\r\n  })\r\n}\r\nmodalOK = () => {\r\n  this.setState({\r\n    showBuyModal: false\r\n  })\r\n}\r\n\r\n\r\n  render() {\r\n    if (this.state.showBuyModal) { return <Buy ticker = {this.state.ticker} \r\n        price = {this.props.watchlist[this.props.watchlist.findIndex(item => item.ticker === this.state.ticker)].prices[99]}\r\n      time={this.props.watchlist[this.props.watchlist.findIndex(item => item.ticker === this.state.ticker)].times[99]} \r\n        handleBuy={this.props.handleBuy} modalOK={this.modalOK}\r\n        updatePortfolioData={this.props.updatePortfolioData}\r\n        handleClose={this.modalOK}\r\n        />}\r\n\r\n    if (Object.keys(this.props.watchlist[0] !== undefined && this.props.watchlist[0]).length !== 0) {     // dont render if watchlist is empty object\r\n      return (<div className=\"watchlist-inside-wrap\">\r\n        <h2>Watchlist</h2>\r\n        <table className=\"watchlist\">\r\n          <thead>\r\n          <tr><th>Stock ticker:</th><th>Price:</th><th></th></tr>\r\n          </thead>\r\n          <tbody>{this.props.watchlist.map(asset => \r\n            (<tr key={asset.ticker} onMouseOver={this.showGraphHandler}>\r\n              <td className=\"ticker\">{asset.ticker}</td><td className=\"price\" >${asset.prices[asset.prices.length-1]}</td>\r\n              <td><button className=\"Graph-btn\" name={asset.ticker} onClick={this.showGraphHandler}>Graph</button></td>\r\n            <td><button className=\"BuyBtn\" name={asset.ticker} onClick={this.buyHandler}>Buy</button></td>\r\n            </tr>)\r\n          )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )}\r\n    else if(this.props.stocks.length > 0) {return (\r\n      <div className=\"watchlist-inside-wrap\">\r\n      <table className=\"watchlist\">\r\n      <tbody>{this.props.stocks.map(asset =>\r\n        (<tr key={asset.ticker}>\r\n          <td className=\"ticker\">{asset.ticker}</td>\r\n          <td><button className=\"Btn\" id={asset.ticker} onClick={this.deleteHandler}>Remove</button></td>\r\n        </tr>)\r\n      )}\r\n      </tbody>\r\n      </table>\r\n      </div >)\r\n    }\r\n    else { return null}\r\n  }\r\n}\r\n\r\nexport default Watchlist\r\n","import React, { Component } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\n\r\nclass Graph extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            finalGraphData: {\r\n                labels: [],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Portfolio',\r\n                            data: [],\r\n                        }\r\n                    ]\r\n            },\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render() { \r\n        if(Object.keys(this.props.graphData !== undefined && this.props.graphData).length !== 0) {\r\n    let portfolioData =  {\r\n            labels: this.props.graphData.times,\r\n                datasets: [\r\n                    {\r\n                        label: this.props.graphData.ticker,\r\n                        data: this.props.graphData.prices,\r\n                        backgroundColor: \"transparent\",\r\n                        borderColor: \"rgb(238, 150, 17)\",\r\n                        pointRadius: 0,\r\n                        pointHitRadius: 2,\r\n                        display: false,\r\n                        cubicInterpolationMode: \"monotone\",\r\n                        responsive: true,\r\n                        maintainAspectRatio: false\r\n                        \r\n\r\n                    }\r\n                ]\r\n        }\r\n        return (\r\n        <div className=\"chartwrap\">\r\n            <Line\r\n                data={portfolioData}\r\n                options={{\r\n                    title: {\r\n                        display: this.props.graphData.ticker,\r\n                        text: this.props.graphData.ticker,\r\n                        fontSize: 16\r\n                    },\r\n                    elements: {\r\n                        line: {\r\n                            tension: 0, // disables bezier curves\r\n                        }\r\n                    },\r\n                    scales: {\r\n                        xAxes: [{\r\n                            type: 'time',\r\n                            time: {\r\n                                displayFormats: {\r\n                                    minute: 'h:mm a'\r\n                                }\r\n                            }\r\n                        }]\r\n                    },\r\n                    legend: {\r\n                        display: false,\r\n                        position: 'position'\r\n                            }\r\n                        }}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n            return null\r\n    }}\r\n}\r\n\r\nexport default Graph","import React, { Component } from 'react'\r\n\r\nclass SellConfirmation extends Component {\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault()\r\n        console.log(e.target)\r\n        if (e.target.className !== 'modal') { this.props.sellReject() }\r\n    }\r\n\r\n    render() {\r\n        const backgroundStyle = {\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'rgba(0,0,0,0.5)',\r\n            zIndex: 100\r\n        }\r\n        const modalStyle = {\r\n            backgroundColor: \"#22201e\",\r\n            borderRadius: 3,\r\n            border: \"2px solid orange\",\r\n            width: 450,\r\n            height: 75,\r\n            margin: 'auto',\r\n            marginTop: 250,\r\n            position: 'relative',\r\n            zIndex: 101\r\n        }\r\n\r\n\r\n        return (\r\n            <div onClick={this.handleClose} style={backgroundStyle}>\r\n                <div className=\"modal\" style={modalStyle}>\r\n                    <h3 className=\"modal\"><span>Are you sure you want to sell {this.props.stock.volume} {this.props.stock.ticker} stocks for <span className=\"green\">{(this.props.stock.price * this.props.stock.volume).toLocaleString(\"en\")}</span>?<br></br><button className=\"Btn\" onClick={this.props.sellApproved}>Yes</button><button className=\"Btn\" onClick={this.props.sellReject}>No</button></span></h3>\r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default SellConfirmation\r\n","import React, { Component } from 'react'\r\nimport SellConfirmation from './modals/SellConfirmation'\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ticker: '',\r\n            volume: 0,\r\n            showSellConfirmation: false,\r\n            id: \"\"\r\n        }\r\n    }\r\n\r\n    sellHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log(this.props.portfolio.filter(item => item.id === e.target.id)[0].ticker)\r\n        this.setState({\r\n            showSellConfirmation: true,\r\n            id: e.target.id,\r\n            ticker: this.props.portfolio.filter(item => item.id === e.target.id)[0].ticker,\r\n            volume: this.props.portfolio.filter(item => item.id === e.target.id)[0].volume,\r\n            price: this.props.portfolio.filter(item => item.id === e.target.id)[0].price\r\n\r\n        })\r\n    }\r\n    sellApproved = () => {\r\n        this.props.sellStock(this.state.id)\r\n        this.setState({\r\n            showSellConfirmation: false\r\n        })\r\n    }\r\n    sellReject = () => {\r\n        this.setState({\r\n            showSellConfirmation: false\r\n        })\r\n    }\r\n\r\nresults\r\n    render() {\r\n        let portfolioPurchasePrice = 0\r\n        for(let i = 0; i < this.props.portfolio.length; i++) {\r\n            portfolioPurchasePrice = portfolioPurchasePrice + this.props.portfolio[i].price*this.props.portfolio[i].volume\r\n        }\r\n        let portfolioValue = 0 \r\n        for(let i = 0; i < this.props.portfolio.length; i++) {\r\n            portfolioValue = portfolioValue + this.props.portfolio[i].currentPrice*this.props.portfolio[i].volume\r\n        }\r\n        if (this.props.portfolio.length > 0) {\r\n            return (\r\n                \r\n                <div className=\"watchlist-inside-wrap\">\r\n                <h2>Portfolio</h2>\r\n                    {(this.state.showSellConfirmation && <SellConfirmation sellApproved={this.sellApproved} sellReject={this.sellReject} stock={this.state}/>)}\r\n                <table className=\"watchlist\" >\r\n                    <thead>\r\n                        <tr><th>Purchased(EST)</th><th>Stock</th><th>Volume</th><th>Purchase Price</th><th>Current Price</th>\r\n                        <th>Value</th> <th>Result %</th> <th> $</th><th></th></tr>\r\n                    </thead>\r\n                    <tbody>{this.props.portfolio.map(asset =>\r\n                        (<tr key={asset.id}>\r\n                            <td>{asset.timeOfPurchase}</td><td>{asset.ticker}</td><td>{asset.volume}</td><td>${asset.price.toLocaleString(\"en\")}</td><td>${(asset.currentPrice).toLocaleString(\"en\")}</td>\r\n                            <td>${((Math.round(100 * asset.currentPrice * asset.volume)) / 100).toLocaleString(\"en\")}</td>\r\n                            <td className = {(asset.currentPrice / asset.price) >= 1 ? \"green-result\" : \"red-result\"} id=\"results1\" >%{((Math.round(100 * 100 * (asset.currentPrice / asset.price - 1))) /100).toLocaleString(\"en\")}</td>\r\n                            <td className = {(asset.currentPrice / asset.price) >= 1 ? \"green-result\" : \"red-result\"} id=\"results2\">${((Math.round(100 * (asset.currentPrice * asset.volume - asset.price * asset.volume))) / 100).toLocaleString(\"en\")}</td>\r\n                            <td><button className=\"Btn\" id={asset.id} onClick={this.sellHandler}>Sell</button></td>\r\n                        </tr>)\r\n                    )}\r\n                    <tr><td className=\"portfolio-sum\">Portfolio Summary</td><td></td><td></td>\r\n                    <td className=\"portfolio-sum\">${(portfolioPurchasePrice).toLocaleString(\"en\")}</td><td></td>\r\n                    <td className=\"portfolio-sum\">${(portfolioValue).toLocaleString(\"en\")}</td>\r\n                    <td className = {(portfolioValue / portfolioPurchasePrice) >= 1 ? \"green-result\" : \"red-result\"}>%{((portfolioValue/portfolioPurchasePrice-1)*100).toLocaleString(\"en\")}</td>\r\n                    <td className = {(portfolioValue / portfolioPurchasePrice) >= 1 ? \"green-result\" : \"red-result\"}>${((portfolioValue-portfolioPurchasePrice)).toLocaleString(\"en\")}</td><td></td>\r\n                    </tr>\r\n                        </tbody>\r\n                    </table>    \r\n                </div>\r\n            )\r\n        }\r\n        else return (<div className=\"watchlist-inside-wrap\"><h2>Portfolio is empty</h2><table className=\"watchlist\"></table></div>)\r\n    }\r\n}\r\n\r\nexport default Portfolio","import React, { Component } from 'react'\r\n\r\nclass Error extends Component {\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault()\r\n        console.log(e.target)\r\n        if (e.target.className !== 'modal') { this.props.handleClose() }\r\n    }\r\n\r\n    render() {\r\n        const backgroundStyle = {\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'rgba(0,0,0,0.5)',\r\n            zIndex: 100\r\n        }\r\n        const modalStyle = {\r\n            backgroundColor: \"#22201e\",\r\n            borderRadius: 3,\r\n            border: \"2px solid orange\",\r\n            width: 450,\r\n            height: 75,\r\n            margin: 'auto',\r\n            marginTop: 250,\r\n            position: 'relative',\r\n            zIndex: 101\r\n        }\r\n\r\n\r\n        return (\r\n            <div onClick={this.handleClose} style={backgroundStyle}>\r\n                <div className=\"modal\" style={modalStyle}>\r\n                    <h3 className=\"modal\"><span>Too many API requests. You probably refreshed the page and started simulation within one minute. Please wait one minute and try again!<button onClick={this.handleClose}>X</button></span></h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import React, { Component } from 'react'\r\n\r\nclass History extends Component {\r\nconstructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        toggleOn: false\r\n    }\r\n    \r\n}\r\ntoggleSwitch = () => {\r\n    this.setState({\r\n        toggleOn: !this.state.toggleOn\r\n    })\r\n}\r\n\r\n\r\n    render() {\r\n        let totalInvested = (this.props.history.map(item => item.price*item.volume)).reduce((a, b) => a + b, 0)\r\n        let totalCurrentValue = (this.props.history.map(item => item.currentPrice * item.volume)).reduce((a, b) => a + b, 0)\r\n\r\n        if (!this.state.toggleOn) { return (<div className=\"closed-history\" >\r\n            <h2><span className=\"toggler\" onClick={this.toggleSwitch}> + </span><span>History</span></h2>\r\n        </div>)\r\n        }\r\n        else if (this.state.toggleOn && this.props.history.length !== 0) {\r\n            let history = this.props.history\r\n            return (\r\n            <div className=\"watchlist-wrap\">\r\n                <div className=\"watchlist-inside-wrap\">\r\n                    <h2><span className=\"toggler\" onClick={this.toggleSwitch}> - </span>History</h2>\r\n                    <table className=\"watchlist\">\r\n\r\n                        <thead>\r\n                            <tr><th>Stock ticker:</th><th>Volume</th><th>Purchased</th><th>Price</th><th>Sold</th><th>Price</th><th>Result</th></tr>\r\n                        </thead>\r\n                        <tbody>{history.map(asset =>\r\n                            (<tr key={asset.ticker}>\r\n                                <td >{asset.ticker}</td>\r\n                                <td> {asset.volume}</td>\r\n                                <td >{asset.timeOfPurchase}</td>\r\n                                <td onMouseOver={this.hoverHandler}>{(asset.price*asset.volume).toLocaleString(\"en\")}</td>\r\n                                <td >{asset.timeOfSell}</td>\r\n                                <td onMouseOver={this.hoverHandler}>{(asset.currentPrice*asset.volume).toLocaleString(\"en\")}</td>\r\n                                <td className={(totalCurrentValue - totalInvested) >= 0 ? \"green-result\" : \"red-result\"}>{(asset.currentPrice*asset.volume - asset.price*asset.volume).toLocaleString(\"en\")}</td>\r\n                            </tr>)\r\n                        )}\r\n                        <tr>\r\n                                <td className=\"portfolio-sum\">Total</td><td></td><td></td><td className=\"portfolio-sum\">{totalInvested.toLocaleString(\"en\")}</td>\r\n                                <td></td><td className=\"portfolio-sum\">{totalCurrentValue.toLocaleString(\"en\")}</td>\r\n                                <td className={(totalCurrentValue - totalInvested) >= 0 ? \"green-result\" : \"red-result\"}>{(totalCurrentValue - totalInvested).toLocaleString(\"en\")}</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n            )\r\n        }\r\n        else { return (\r\n        <div className=\"watchlist-wrap\">    \r\n            <div className=\"watchlist-inside-wrap\">\r\n                <h2><span className=\"toggler\" onClick={this.toggleSwitch}> - </span>History is empty</h2>\r\n            </div>\r\n        </div>\r\n        ) }\r\n    }\r\n\r\n}\r\n\r\nexport default History\r\n","import React from 'react'\r\nimport Stockadder from './components/Stockadder'\r\nimport Watchlist from './components/Watchlist'\r\nimport Graph from './components/Graph'\r\nimport axios from 'axios'\r\nimport './css/main.css'\r\nimport Portfolio from './components/Portfolio'\r\nimport Error from './components/modals/error'\r\nimport History from './components/History'\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.apiSummary = []\r\n        this.state = {\r\n            apiData: [],\r\n            stocks: [],\r\n            graphData: [{}],\r\n            stockDisplay: 0,\r\n            portfolio: [],\r\n            portfolioData: [],\r\n            history: [],\r\n            showStockadder: true,\r\n            showError: false\r\n            \r\n        }\r\n    }\r\n    errorClose = () => {\r\n        this.setState({\r\n            showError: false\r\n        })\r\n    }\r\n\r\n    deleteStock = (stock) => {\r\n        this.setState({\r\n            stocks: this.state.stocks.filter(item => item.ticker !== stock)\r\n        })\r\n        }\r\n    addStock = (stock) => {    \r\n        if(this.state.stocks.length<5) {\r\n        this.setState({\r\n            stocks: this.state.stocks.concat(stock)\r\n        })\r\n    }\r\n    else {\r\n        alert('Maximum portfoliosize is 5')\r\n    }\r\n    \r\n}\r\n        addFive = () => {\r\n            this.setState({\r\n                stocks: [{ticker: 'TSLA'}, {ticker: 'AAPL'}, {ticker: 'GOOGL'}, {ticker: 'AMZN'}, {ticker: 'M&M'}]\r\n            })\r\n        \r\n        }\r\n\r\n    showGraph = (stock) => {\r\n        if(stock !== undefined){\r\n        this.setState({\r\n        stockDisplay: this.state.graphData.findIndex(item => item.ticker === stock)\r\n        })}\r\n    }\r\n\r\n    handleBuy = (stock) => {\r\n        console.log(stock)\r\n\r\n        this.updateHistory(stock, \"buy\")\r\n        let newPort = this.state.portfolio.concat(stock)\r\n        this.setState({\r\n            portfolio: newPort\r\n        })\r\n        setTimeout(this.updatePortfolioData, 1000)\r\n    }\r\n    sellStock = (stock) => {\r\n        this.updateHistory(stock, \"sell\")\r\n    }\r\n\r\n    updateHistory = (stock, buy) => {\r\n        let newHistory = []\r\n        let newPortfolio = []\r\n        if (buy === \"buy\") {\r\n            newHistory = this.state.history.concat(stock)\r\n        }\r\n        else {\r\n            newHistory = JSON.parse(JSON.stringify(this.state.history))\r\n            newHistory[newHistory.findIndex(item => item.id === stock)].timeOfSell = this.state.portfolioData.times[this.state.portfolioData.times.length-1]\r\n            newPortfolio = JSON.parse(JSON.stringify(this.state.portfolio))\r\n            let sellIndex = newPortfolio.findIndex(item => item.id === stock)\r\n\r\n            console.log(\"sellIndex\" + sellIndex)\r\n            newPortfolio.splice(sellIndex, 1)\r\n\r\n        }\r\n        this.setState({\r\n            portfolio: newPortfolio,\r\n            history: newHistory\r\n        })\r\n        \r\n    }\r\n    \r\n    updatePortfolioData = () => {\r\n        if (this.state.portfolio.length > 0) {\r\n            let portfolioData = []\r\n            let pricesSumArray = []\r\n            let portfolioIndexes = []\r\n            for (let i = 0; i < this.state.portfolio.length; i++) {         // find indexes in graphData corresponding to ascending indexes of portfolio \r\n                for (let u = 0; u < this.state.graphData.length; u++) {\r\n                    if (this.state.portfolio[i].ticker === this.state.graphData[u].ticker) {\r\n                        portfolioIndexes.push(u)\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < this.state.portfolio.length; i++) {     // multiply each stocks price with its volume\r\n                    portfolioData[i] = {\r\n                    pricesProd: this.state.graphData[portfolioIndexes[i]].prices.map(price => price * this.state.portfolio[i].volume),\r\n                    times: this.state.graphData[portfolioIndexes[i]].times\r\n                }\r\n            }\r\n            for (let i = 0; i < portfolioData.length; i++) {            // slice each stockprice array at the time of purchase\r\n                let buyTime = portfolioData[i].times.findIndex(item => item === this.state.portfolio[i].timeOfPurchase)\r\n                portfolioData[i].pricesProd = portfolioData[i].pricesProd.slice(buyTime)\r\n                portfolioData[i].times = portfolioData[i].times.slice(buyTime)\r\n            }\r\n            for (let i = portfolioData[0].pricesProd.length-1; i > -1; i--) {   // sum all stock products at each timepoint\r\n                let priceSum = 0\r\n                for (let u = 0; u < this.state.portfolio.length; u++) {\r\n                    priceSum = priceSum + portfolioData[u].pricesProd[i]\r\n                }\r\n                pricesSumArray.unshift(priceSum)\r\n            }\r\n\r\n            let portfolioCopy = [...this.state.portfolio]                               //update current price of portfolio stocks\r\n            for (let i = 0; i < this.state.portfolio.length; i++) {\r\n                portfolioCopy[i].currentPrice = this.state.graphData[portfolioIndexes[i]].prices[99]\r\n            }\r\n            this.setState({\r\n                portfolioData: {\r\n                    prices: pricesSumArray,\r\n                    times: portfolioData[0].times,\r\n                    ticker: 'Portfolio'\r\n                },\r\n                portfolio: portfolioCopy\r\n            })\r\n        }\r\n    }\r\n\r\n    updateStocks = async() => {\r\n        this.apiSummary = []\r\n        this.setState({\r\n            showStockadder: false,\r\n            apiData: [],\r\n        })\r\n        const API_KEY = 'RNMW9AOG5O5M2LRV' //alphavantage.co\r\n        for( let i = 0; i < this.state.stocks.length; i++ ) {\r\n            await axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${this.state.stocks[i].ticker}&interval=1min&apikey=${API_KEY}`).then(res => {\r\n                let prices = []\r\n                let times = Object.keys(res.data['Time Series (1min)']).reverse()\r\n                for (let u = 0; u < times.length; u++) {\r\n                    prices = prices.concat(Math.round(parseFloat(res.data['Time Series (1min)'][times[u]]['4. close']) * 1000)/1000)\r\n                }\r\n                this.apiSummary.push({                          // add stock data together\r\n                        times: times,\r\n                        prices: prices,\r\n                        volume: this.state.stocks[i].volume,\r\n                        ticker: this.state.stocks[i].ticker\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                this.setState({\r\n                        showError: 'too many api requests! this api-key supports up to 5 per minute',\r\n                        stocks: [],\r\n                        showStockadder: true\r\n                    })\r\n                })\r\n            }\r\n                this.setState({\r\n                    graphData: this.apiSummary\r\n                })\r\n            setTimeout(this.updatePortfolioData, 2000)\r\n            setTimeout(this.updateStocks, 64000)\r\n        }\r\n\r\n        render() { \r\n            return (\r\n                <div className=\"page-container\">\r\n                {(this.state.showError && <Error handleClose={this.errorClose} />)}\r\n                    \r\n                    <h1><span>PORTFOLIO</span> TRACKER</h1>\r\n                        <div className=\"list-and-graph-wrap\">\r\n                            <div className=\"watchlist-wrap\">\r\n                                {this.state.showStockadder && <Stockadder stocks={this.state.stocks} addFive={this.addFive} addStock={this.addStock} updateStocks={this.updateStocks} />}\r\n                                < Watchlist stocks={this.state.stocks} watchlist={this.state.graphData} deleteStock={this.deleteStock} showGraph={this.showGraph} handleBuy={this.handleBuy} updatePortfolioData={this.updatePortfolioData} />\r\n                            </div>\r\n                            <div className=\"chart\">\r\n                                < Graph graphData={this.state.graphData[this.state.stockDisplay]} /> \r\n                            </div>\r\n                        </div>\r\n                    <div className=\"list-and-graph-wrap\">\r\n                        <div className=\"watchlist-wrap\"> \r\n                             <Portfolio portfolio={this.state.portfolio} graphData={this.state.graphData} sellStock={this.sellStock} /> \r\n                        </div>\r\n                        <div className=\"chart\">\r\n                            <Graph graphData={this.state.portfolioData} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"list-and-graph-wrap\">\r\n                            <History history={this.state.history}/>\r\n                            <div></div>\r\n                    </div>\r\n                </div>\r\n                    )\r\n        } }\r\nexport default App\r\n   // \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //    this.setPortfolioData()\r\n\r\n    // setPortfolioData = () => {\r\n    //     this.setState({\r\n    //         portfolioData:{\r\n    //             labels: this.state.portfolioData.labels.concat(this.state.apiData.labels[this.state.apiData.labels.length]),\r\n    //             datasets: [\r\n    //                 {\r\n    //                     label: 'Portfolio',\r\n    //                     data: this.state.portfolioData.datasets.data.concat(this.state.apiData.datasets.data[this.state.apiData.datasets.data.length]),\r\n    //                 }\r\n    //             ]\r\n    //         }\r\n    //     })\r\n    //     console.log(this.state.portfolioData)\r\n    // }","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}