{"version":3,"sources":["components/Stockadder.js","components/modals/buy.js","components/Watchlist.js","components/Graph.js","components/Portfolio.js","components/modals/error.js","App.js","serviceWorker.js","index.js"],"names":["Stockadder","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeTick","e","setState","ticker","target","value","handleChangeVolume","volume","submitHandler","preventDefault","state","addStock","updateHandler","updateStocks","addFive","stocks","react_default","a","createElement","className","type","onChange","placeholder","id","onClick","length","Component","Buy","handleChange","timeOfPurchase","time","price","currentPrice","currentTime","handleBuy","modalOK","handleClose","console","log","style","position","top","bottom","left","right","backgroundColor","width","height","margin","marginTop","modalMessage","Math","round","Watchlist","deleteHandler","deleteStock","showGraphHandler","name","showGraph","buyHandler","objectSpread","showBuyModal","_this2","buy","watchlist","findIndex","item","prices","times","updatePortfolioData","keys","undefined","map","asset","key","onMouseOver","Graph","finalGraphData","labels","datasets","label","data","graphData","portfolioData","es","options","title","display","text","fontSize","legend","Portfolio","sellHandler","sellStock","greenStyle","color","portfolio","Error","App","errorClose","showError","stock","filter","concat","alert","stockDisplay","compare","b","newPort","sort","portfolioIndexes","i","u","push","setTimeout","pricesSumArray","_loop","pricesProd","priceSum","setInterval","asyncToGenerator","regenerator_default","mark","_callee","_loop2","wrap","_context2","prev","next","apiSummary","showStockadder","apiData","_context","axios","get","then","res","reverse","parseFloat","catch","error","stop","delegateYield","portfolioCopy","toConsumableArray","_loop3","components_Stockadder","components_Watchlist","components_Graph","components_Portfolio","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wOAwDeA,cArDX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQZQ,iBAAkB,SAACC,GACjBR,EAAKS,SAAS,CAACC,OAAQF,EAAEG,OAAOC,SAVbZ,EAYrBa,mBAAqB,SAACL,GACpBR,EAAKS,SAAS,CAAEK,OAAQN,EAAEG,OAAOC,SAbdZ,EAgBvBe,cAAgB,SAACP,GACfA,EAAEQ,iBACwB,KAAtBhB,EAAKiB,MAAMP,QACdV,EAAKD,MAAMmB,SAASlB,EAAKiB,QAnBLjB,EAsBvBmB,cAAgB,SAACX,GACfA,EAAEQ,iBACFhB,EAAKD,MAAMqB,gBAxBUpB,EA2BvBqB,QAAU,SAACb,GACTA,EAAEQ,iBACFhB,EAAKS,SAAS,CACZa,OAAQ,CAAC,CAAEZ,OAAQ,QAAU,CAAEA,OAAQ,QAAU,CAAEA,OAAQ,SAAW,CAAEA,OAAQ,QAAU,CAAEA,OAAQ,UAEtGV,EAAKD,MAAMsB,WA9BLrB,EAAKiB,MAAQ,CACTP,OAAQ,GACRI,OAAQ,GAJGd,wEAmCnB,OACEuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,uBACEF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,SAAUzB,KAAKI,iBAAkBsB,YAAY,wBAAwBC,GAAG,gBAI3FP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcC,KAAK,SAASI,QAAS5B,KAAKY,eAA5D,OACFQ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcK,QAAS5B,KAAKkB,SAA9C,oBACEE,EAAAC,EAAAC,cAAA,WACCtB,KAAKJ,MAAMuB,OAAOU,OAAS,EAAmET,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAuBK,QAAS5B,KAAKgB,eAAvD,mBAA9DI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAlB,4BA/CpBO,qBCqEVC,cApEX,SAAAA,EAAYnC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,IACdlC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,KAAAH,KAAMJ,KAQdoC,aAAe,SAAC3B,GACZR,EAAKS,SAAS,CACVK,OAAQN,EAAEG,OAAOC,MACjBF,OAAQV,EAAKD,MAAMW,OACnB0B,eAAgBpC,EAAKD,MAAMsC,KAC3BC,MAAOtC,EAAKD,MAAMuC,MAClBC,aAAcvC,EAAKD,MAAMuC,MACzBE,YAAaxC,EAAKD,MAAMuC,SAhBVtC,EAoBtByC,UAAY,SAACjC,GACTA,EAAEQ,iBACChB,EAAKiB,MAAMH,OAAS,GAAId,EAAKD,MAAM0C,UAAUzC,EAAKiB,OACrDjB,EAAKD,MAAM2C,WAvBO1C,EAyBtB2C,YAAc,SAACnC,GACXA,EAAEQ,iBACF4B,QAAQC,IAAIrC,EAAEG,QACY,UAAvBH,EAAEG,OAAOe,WACX1B,EAAKD,MAAM4C,eA3BR3C,EAAKiB,MAAQ,CACTH,OAAQ,EACRsB,eAAgB,EAChBE,MAAO,EACPC,aAAc,GANJvC,wEAsDlB,OACEuB,EAAAC,EAAAC,cAAA,OAAKM,QAAS5B,KAAKwC,YAAaG,MAtBR,CACtBC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,gBAAiB,oBAiBjB7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQoB,MAfN,CACjBM,gBAAiB,OACjBC,MAAO,MACPC,OAAQ,IACRC,OAAQ,OACRC,UAAW,IACXT,SAAU,aAUVxB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASvB,KAAKJ,MAAM0D,cAC1BlC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQoB,MAThB,IASkCvB,EAAAC,EAAAC,cAAA,YAAOtB,KAAKJ,MAAMW,QACxDa,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQE,SAAUzB,KAAKgC,aAAcR,KAAK,SAASE,YAAY,WADpF,IACsGN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASgC,KAAKC,MAAMxD,KAAKJ,MAAMuC,MAAMnC,KAAKc,MAAMH,QAAhE,KACtGS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAQK,QAAS5B,KAAKsC,WAAxC,iBA7DER,aC6EH2B,cA3EX,SAAAA,EAAY7D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,IACf5D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2D,GAAAtD,KAAAH,KAAMJ,KASd8D,cAAgB,SAACrD,GACjBA,EAAEQ,iBACFhB,EAAKD,MAAM+D,YAAYtD,EAAEG,OAAOmB,KAZT9B,EAcvB+D,iBAAmB,SAACvD,GAClBA,EAAEQ,iBACF4B,QAAQC,IAAIrC,EAAEG,OAAOqD,MACrBhE,EAAKD,MAAMkE,UAAUzD,EAAEG,OAAOqD,OAjBThE,EAmBvBkE,WAAa,SAAC1D,GACZA,EAAEQ,iBACFhB,EAAKS,SAALR,OAAAkE,EAAA,EAAAlE,CAAA,GACKD,EAAKiB,MADV,CACiBmD,cAAepE,EAAKiB,MAAMmD,aAAc1D,OAAQF,EAAEG,OAAOqD,SAtBrDhE,EAyBvB0C,QAAU,WACR1C,EAAKS,SAAS,CACZ2D,cAAc,KAzBVpE,EAAKiB,MAAM,CACPP,OAAQ,GACRI,OAAQ,EACRsD,cAAc,GALHpE,wEAgCZ,IAAAqE,EAAAlE,KACP,OAAIA,KAAKc,MAAMmD,aAAuB7C,EAAAC,EAAAC,cAAC6C,EAAD,CAAKb,aAAe,eAAe/C,OAAUP,KAAKc,MAAMP,OAC1F4B,MAASnC,KAAKJ,MAAMwE,UAAUpE,KAAKJ,MAAMwE,UAAUC,UAAU,SAAAC,GAAI,OAAIA,EAAK/D,SAAW2D,EAAKpD,MAAMP,UAASgE,OAAO,IAClHrC,KAAMlC,KAAKJ,MAAMwE,UAAUpE,KAAKJ,MAAMwE,UAAUC,UAAU,SAAAC,GAAI,OAAIA,EAAK/D,SAAW2D,EAAKpD,MAAMP,UAASiE,MAAM,IAC1GlC,UAAWtC,KAAKJ,MAAM0C,UAAWC,QAASvC,KAAKuC,QAC/CkC,oBAAqBzE,KAAKJ,MAAM6E,oBAChCjC,YAAaxC,KAAKuC,UAGuE,IAAzFzC,OAAO4E,UAAiCC,IAA5B3E,KAAKJ,MAAMwE,UAAU,IAAoBpE,KAAKJ,MAAMwE,UAAU,IAAIvC,OACxET,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACfH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,2BAAsBF,EAAAC,EAAAC,cAAA,sBAE1BF,EAAAC,EAAAC,cAAA,aAAQtB,KAAKJ,MAAMwE,UAAUQ,IAAI,SAAAC,GAAK,OACnCzD,EAAAC,EAAAC,cAAA,MAAIwD,IAAKD,EAAMtE,OAAQsD,KAAMgB,EAAMtE,OAAQwE,YAAab,EAAKN,kBAC5DxC,EAAAC,EAAAC,cAAA,MAAIuC,KAAMgB,EAAMtE,OAAQgB,UAAU,UAAUsD,EAAMtE,QAAYa,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQsC,KAAMgB,EAAMtE,QAAlC,IAA4CsE,EAAMN,OAAOM,EAAMN,OAAO1C,OAAO,IAC7IT,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMsC,KAAMgB,EAAMtE,OAAQqB,QAASsC,EAAKH,YAA1D,cAOJ/D,KAAKJ,MAAMuB,OAAOU,OAAS,EACjCT,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACjBH,EAAAC,EAAAC,cAAA,aAAQtB,KAAKJ,MAAMuB,OAAOyD,IAAI,SAAAC,GAAK,OAChCzD,EAAAC,EAAAC,cAAA,MAAIwD,IAAKD,EAAMtE,QACda,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUsD,EAAMtE,QAC9Ba,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMI,GAAIkD,EAAMtE,OAAQqB,QAASsC,EAAKR,eAAxD,2BAOI,YAxEM5B,qBCoDTkD,cAlDX,SAAAA,EAAYpF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,IACfnF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkF,GAAA7E,KAAAH,KAAMJ,KACDkB,MAAQ,CACTmE,eAAgB,CACZC,OAAQ,GACJC,SAAU,CACN,CACIC,MAAO,YACPC,KAAM,OARXxF,wEAkBf,GAAsF,IAAnFC,OAAO4E,UAA8BC,IAAzB3E,KAAKJ,MAAM0F,WAA2BtF,KAAKJ,MAAM0F,WAAWzD,OAAc,CAC7F,IAAI0D,EAAiB,CACbL,OAAQlF,KAAKJ,MAAM0F,UAAUd,MACzBW,SAAU,CACN,CACIC,MAAOpF,KAAKJ,MAAM0F,UAAU/E,OAC5B8E,KAAMrF,KAAKJ,MAAM0F,UAAUf,UAI3C,OACInD,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CACIH,KAAME,EACNE,QAAS,CACLC,MAAO,CACHC,QAAS3F,KAAKJ,MAAM0F,UAAU/E,OAC9BqF,KAAM5F,KAAKJ,MAAM0F,UAAU/E,OAC3BsF,SAAU,IAEdC,OAAQ,CACJH,QAAS,UACT/C,SAAU,eAOtB,OAAO,YA/CCd,8BCsDLiE,sBAvDX,SAAAA,EAAYnG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,IACflG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAA5F,KAAAH,KAAMJ,KAOVoG,YAAc,SAAC3F,GACXA,EAAEQ,iBACFhB,EAAKD,MAAMqG,UAAU5F,EAAEG,OAAOmB,KAR9B9B,EAAKiB,MAAQ,CACTP,OAAQ,GACRI,OAAQ,GAJGd,wEAcV,IAAAqE,EAAAlE,KAICkG,EAAa,CACfC,MAAO,WAGX,OAAInG,KAAKJ,MAAMwG,UAAUvE,OAAS,EAE1BT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,4BAAuBF,EAAAC,EAAAC,cAAA,mBAAcF,EAAAC,EAAAC,cAAA,oBAAeF,EAAAC,EAAAC,cAAA,4BAAuBF,EAAAC,EAAAC,cAAA,2BAC/EF,EAAAC,EAAAC,cAAA,mBADA,IACeF,EAAAC,EAAAC,cAAA,qBADf,IACgCF,EAAAC,EAAAC,cAAA,uBAEpCF,EAAAC,EAAAC,cAAA,aAAQtB,KAAKJ,MAAMwG,UAAUxB,IAAI,SAAAC,GAAK,OACjCzD,EAAAC,EAAAC,cAAA,MAAIwD,IAAKD,EAAMtE,QACZa,EAAAC,EAAAC,cAAA,UAAKuD,EAAM5C,gBAAoBb,EAAAC,EAAAC,cAAA,UAAKuD,EAAMtE,QAAYa,EAAAC,EAAAC,cAAA,UAAKuD,EAAMlE,QAAYS,EAAAC,EAAAC,cAAA,cAAMuD,EAAM1C,OAAWf,EAAAC,EAAAC,cAAA,cAAMuD,EAAMzC,cAChHhB,EAAAC,EAAAC,cAAA,cAAOiC,KAAKC,MAAM,IAAMqB,EAAMzC,aAAeyC,EAAMlE,QAAW,KAC9DS,EAAAC,EAAAC,cAAA,MAAIK,GAAG,YAAP,IAAsB4B,KAAKC,MAAM,KAAaqB,EAAMzC,aAAeyC,EAAM1C,MAAQ,IAAM,KACvFf,EAAAC,EAAAC,cAAA,MAAIqB,MAAOuD,EAAYvE,GAAG,YAA1B,IAAwC4B,KAAKC,MAAM,KAAOqB,EAAMzC,aAAeyC,EAAMlE,OAASkE,EAAM1C,MAAQ0C,EAAMlE,SAAY,KAC9HS,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAMI,GAAIkD,EAAMtE,OAAQqB,QAASsC,EAAK8B,aAAxD,cAKZ5E,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBAAmBF,EAAAC,EAAAC,cAAA,2BAAsBF,EAAAC,EAAAC,cAAA,qBAAgBF,EAAAC,EAAAC,cAAA,yBAMpEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAiBH,EAAAC,EAAAC,cAAA,wCApD7BQ,cCqCTuE,6MAnCX7D,YAAc,SAACnC,GACXA,EAAEQ,iBACF4B,QAAQC,IAAIrC,EAAEG,QACa,UAAvBH,EAAEG,OAAOe,WAAyB1B,EAAKD,MAAM4C,uFAsBjD,OACIpB,EAAAC,EAAAC,cAAA,OAAKM,QAAS5B,KAAKwC,YAAaG,MAnBZ,CACpBC,SAAU,WACVC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,gBAAiB,oBAcb7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQoB,MAZZ,CACfM,gBAAiB,OACjBC,MAAO,MACPC,OAAQ,IACRC,OAAQ,OACRC,UAAW,IACXT,SAAU,aAOFxB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASvB,KAAKJ,MAAM0D,aAAalC,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQM,QAAS5B,KAAKwC,aAAtB,gBA9BrDV,aCwLLwE,cAhLX,SAAAA,EAAY1G,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsG,IACdzG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwG,GAAAnG,KAAAH,KAAMJ,KAeV2G,WAAa,WACT1G,EAAKS,SAAS,CACVkG,WAAW,KAlBD3G,EAsBlB8D,YAAc,SAAC8C,GACX5G,EAAKS,SAAS,CACVa,OAAQtB,EAAKiB,MAAMK,OAAOuF,OAAO,SAAApC,GAAI,OAAIA,EAAK/D,SAAWkG,OAxB/C5G,EA2BlBkB,SAAW,SAAC0F,GACL5G,EAAKiB,MAAMK,OAAOU,OAAO,EAC5BhC,EAAKS,SAAS,CACVa,OAAQtB,EAAKiB,MAAMK,OAAOwF,OAAOF,KAIrCG,MAAM,+BAlCQ/G,EAsCdqB,QAAU,WACNrB,EAAKS,SAAS,CACVa,OAAQ,CAAC,CAACZ,OAAQ,QAAS,CAACA,OAAQ,QAAS,CAACA,OAAQ,SAAU,CAACA,OAAQ,QAAS,CAACA,OAAQ,WAxCrFV,EA6ClBiE,UAAY,SAAC2C,QACI9B,IAAV8B,GACH5G,EAAKS,SAAS,CACduG,aAAchH,EAAKiB,MAAMwE,UAAUjB,UAAU,SAAAC,GAAI,OAAIA,EAAK/D,SAAWkG,OAhDvD5G,EAoDlBiH,QAAU,SAACzF,EAAG0F,GACV,OAAI1F,EAAEd,OAASwG,EAAExG,QAAkB,EAC/Bc,EAAEd,OAASwG,EAAExG,OAAiB,EAC3B,GAvDOV,EA0DlByC,UAAY,SAACmE,GACT,IAAIO,EAAUnH,EAAKiB,MAAMsF,UAAUO,OAAOF,GAC1CO,EAAQC,KAAKpH,EAAKiH,SAEd,IADJ,IAAII,EAAmB,GACVC,EAAI,EAAGA,EAAIH,EAAQnF,OAAQsF,IAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIvH,EAAKiB,MAAMwE,UAAUzD,OAAQuF,IACzCJ,EAAQG,GAAG5G,SAAWV,EAAKiB,MAAMwE,UAAU8B,GAAG7G,QAC9C2G,EAAiBG,KAAKD,GAItCvH,EAAKS,SAAS,CACV8F,UAAWY,EACXE,qBAEJI,WAAWzH,EAAK4E,oBAAqB,MAzEvB5E,EA2ElBoG,UAAY,SAACQ,GACThE,QAAQC,IAAI+D,IA5EE5G,EAgFlB4E,oBAAsB,WAClB,GAAG5E,EAAKiB,MAAMsF,UAAUvE,OAAS,EAAG,CAGpC,IAFA,IAAI0D,EAAgB,GAChBgC,EAAiB,GAFeC,EAAA,SAG3BL,GACL5B,EAAc4B,GAAK,CAACM,WAAY5H,EAAKiB,MAAMwE,UAAUzF,EAAKiB,MAAMoG,iBAAiBC,IAAI5C,OAAOK,IAAI,SAAAzC,GAAK,OAAIA,EAAQtC,EAAKiB,MAAMsF,UAAUe,GAAGxG,SACrI6D,MAAO3E,EAAKiB,MAAMwE,UAAUzF,EAAKiB,MAAMoG,iBAAiBC,IAAI3C,QAF3D2C,EAAI,EAAGA,EAAItH,EAAKiB,MAAMoG,iBAAiBrF,OAAQsF,IAAKK,EAApDL,GAIL,IAASA,EAAI,EAAGA,EAAI5B,EAAc,GAAGkC,WAAW5F,OAAQsF,IAAK,CAEzD,IADA,IAAIO,EAAW,EACLN,EAAI,EAAGA,EAAIvH,EAAKiB,MAAMsF,UAAUvE,OAAQuF,IAC9CM,GAAsBnC,EAAc6B,GAAGK,WAAWN,GAEtDI,EAAeF,KAAKK,GAExB7H,EAAKS,SAAS,CACViF,cAAe,CACXhB,OAAQgD,EACR/C,MAAOe,EAAc,GAAGf,MACxBjE,OAAQ,eAIpBoH,YAAY9H,EAAK4E,oBAAqB,OAvGxB5E,EA0GlBoB,aA1GkBnB,OAAA8H,EAAA,EAAA9H,CAAA+H,EAAAxG,EAAAyG,KA0GH,SAAAC,IAAA,IAAAC,EAAAb,EAAA,OAAAU,EAAAxG,EAAA4G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACXvI,EAAKwI,WAAa,GAClBxI,EAAKS,SAAS,CACVgI,gBAAgB,EAChBC,QAAS,GACTjD,UAAW,CAAC,MAEA,mBAPL0C,EAAAH,EAAAxG,EAAAyG,KAAA,SAAAE,EAQFb,GARE,OAAAU,EAAAxG,EAAA4G,KAAA,SAAAO,GAAA,cAAAA,EAAAL,KAAAK,EAAAJ,MAAA,cAAAI,EAAAJ,KAAA,EASDK,IAAMC,IAAN,0EAAA/B,OAAoF9G,EAAKiB,MAAMK,OAAOgG,GAAG5G,OAAzG,0BAAAoG,OAFM,qBAE6IgC,KAAK,SAAAC,GAG1J,IAFA,IAAIrE,EAAS,GACTC,EAAQ1E,OAAO4E,KAAKkE,EAAIvD,KAAK,uBAAuBwD,UAC/CzB,EAAI,EAAGA,EAAI5C,EAAM3C,OAAQuF,IAC9B7C,EAASA,EAAOoC,OAAOpD,KAAKC,MAAyE,IAAnEsF,WAAWF,EAAIvD,KAAK,sBAAsBb,EAAM4C,IAAI,cAAqB,KAE/GvH,EAAKwI,WAAWhB,KAAK,CACb7C,MAAOA,EACPD,OAAQA,EACR5D,OAAQd,EAAKiB,MAAMK,OAAOgG,GAAGxG,OAC7BJ,OAAQV,EAAKiB,MAAMK,OAAOgG,GAAG5G,WAGpCwI,MAAM,SAACC,GACRnJ,EAAKS,SAAS,CACNkG,UAAW,kEACXrF,OAAQ,GACRmH,gBAAgB,MA1BrB,wBAAAE,EAAAS,SAAAjB,EAAAhI,QAQFmH,EAAI,EARF,YAQKA,EAAItH,EAAKiB,MAAMK,OAAOU,QAR3B,CAAAqG,EAAAE,KAAA,gBAAAF,EAAAgB,cAAAlB,EAQFb,GARE,eAQmCA,IARnCe,EAAAE,KAAA,gBA+BPvI,EAAKS,SAAS,CACVgF,UAAWzF,EAAKwI,aAGbxI,EAAKiB,MAAMwE,UAAUzD,OAAS,GAAG,WAEpC,IADA,IAAIsH,EAAarJ,OAAAsJ,EAAA,EAAAtJ,CAAQD,EAAKiB,MAAMsF,WADAiD,EAAA,SAE3BlC,GACTgC,EAAchC,GAAG/E,aAAevC,EAAKiB,MAAMwE,UAAUzF,EAAKiB,MAAMwE,UAAUjB,UAAU,SAAAC,GAAI,OAAIA,EAAK/D,SAAW4I,EAAchC,GAAG5G,UAASgE,OAAO,KADpI4C,EAAI,EAAGA,EAAItH,EAAKiB,MAAMsF,UAAUvE,OAAQsF,IAAKkC,EAA7ClC,GAETtH,EAAKS,SAAS,CACV8F,UAAW+C,IALqB,GAOxCxB,YAAY9H,EAAKoB,aAAc,MA1CxB,yBAAAiH,EAAAe,SAAAlB,EAAA/H,SAxGXH,EAAKwI,WAAa,GAClBxI,EAAKiB,MAAQ,CACTyH,QAAS,GACTpH,OAAQ,GACRmE,UAAW,CAAC,IACZuB,aAAc,EACdT,UAAW,GACXb,cAAe,GACf2B,iBAAkB,GAClBoB,gBAAgB,EAChB9B,WAAW,GAZD3G,wEAwJV,OACIuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbvB,KAAKc,MAAM0F,WAAapF,EAAAC,EAAAC,cAAC0H,EAAD,CAAO1F,aAActD,KAAKc,MAAM0F,UAAWhE,YAAaxC,KAAKuG,aACnFnF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,yBAAJ,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVvB,KAAKc,MAAMwH,gBAAkBlH,EAAAC,EAAAC,cAACgI,EAAD,CAAYnI,OAAQnB,KAAKc,MAAMK,OAAQD,QAASlB,KAAKkB,QAASH,SAAUf,KAAKe,SAAUE,aAAcjB,KAAKiB,eACxIG,EAAAC,EAAAC,cAAEiI,EAAF,CAAYpI,OAAQnB,KAAKc,MAAMK,OAAQiD,UAAWpE,KAAKc,MAAMwE,UAAW3B,YAAa3D,KAAK2D,YAAaG,UAAW9D,KAAK8D,UAAWxB,UAAWtC,KAAKsC,UAAWmC,oBAAqBzE,KAAKyE,uBAE3LrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAEkI,EAAF,CAAQlE,UAAWtF,KAAKc,MAAMwE,UAAUtF,KAAKc,MAAM+F,kBAG/DzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmI,EAAD,CAAWrD,UAAWpG,KAAKc,MAAMsF,UAAWd,UAAWtF,KAAKc,MAAMwE,UAAWW,UAAWjG,KAAKiG,aAEjG7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAACkI,EAAD,CAAOlE,UAAWtF,KAAKc,MAAMyE,0BA3KnCmE,IAAM5H,WCGJ6H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7I,EAAAC,EAAAC,cAAC4I,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,KAAK,SAAA6B,GACjCA,EAAaC","file":"static/js/main.e24bb6ca.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Stockadder extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ticker: '',\r\n            volume: 0\r\n        }\r\n    }\r\n  \r\n\r\n  handleChangeTick= (e) => {\r\n    this.setState({ticker: e.target.value})\r\n  }\r\n  handleChangeVolume = (e) => {\r\n    this.setState({ volume: e.target.value })\r\n  }\r\n\r\nsubmitHandler = (e) => {\r\n  e.preventDefault()\r\n  if (this.state.ticker !== '')\r\n  {this.props.addStock(this.state)}\r\n}\r\n\r\nupdateHandler = (e) => {\r\n  e.preventDefault()\r\n  this.props.updateStocks()\r\n}\r\n\r\naddFive = (e) => {\r\n  e.preventDefault()\r\n  this.setState({\r\n    stocks: [{ ticker: 'TSLA' }, { ticker: 'AAPL' }, { ticker: 'GOOGL' }, { ticker: 'AMZN' }, { ticker: 'M&M' }]\r\n  })\r\n  this.props.addFive()\r\n}\r\n  render() {\r\n    return (\r\n      <div className=\"stockadder\">\r\n      <h2>Watchlist</h2>\r\n        <form>\r\n            <input type=\"text\" onChange={this.handleChangeTick} placeholder=\"Add up to 5 assets...\" id=\"stockticker\">                                   \r\n            </input>\r\n            {/*<input type=\"number\" onChange={this.handleChangeVolume}placeholder=\"Volume...\" id=\"volume\">\r\n            </input>*/}\r\n            <button className=\"fromBtn Btn\" type=\"submit\" onClick={this.submitHandler}>Add</button>\r\n          <button className=\"fromBtn Btn\" onClick={this.addFive}>Im feeling lucky</button>\r\n            <br></br>\r\n          {!(this.props.stocks.length > 0) ? <button className=\"startsimBtnNo\" >Start simulator</button> : <button className=\"startsimBtnReady Btn\" onClick={this.updateHandler}>Start simulator</button>}\r\n        </form> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Stockadder\r\n","import React, { Component } from 'react'\r\n\r\nclass Buy extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            volume: 0,\r\n            timeOfPurchase: 0,\r\n            price: 0,\r\n            currentPrice: 0\r\n        }\r\n    }\r\nhandleChange = (e) => {\r\n    this.setState({\r\n        volume: e.target.value,\r\n        ticker: this.props.ticker,\r\n        timeOfPurchase: this.props.time,\r\n        price: this.props.price,\r\n        currentPrice: this.props.price,\r\n        currentTime: this.props.price\r\n    })\r\n}\r\n\r\nhandleBuy = (e) => {\r\n    e.preventDefault()\r\n    if(this.state.volume > 0) {this.props.handleBuy(this.state)}\r\n    this.props.modalOK()\r\n}\r\nhandleClose = (e) => {\r\n    e.preventDefault()\r\n    console.log(e.target)\r\n    if(e.target.className !== 'modal')\r\n   { this.props.handleClose()}\r\n}\r\n    \r\n  render() {\r\n      const backgroundStyle = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'rgba(0,0,0,0.5)'\r\n      }\r\n      const modalStyle = {\r\n        backgroundColor: '#fff',\r\n        width: '70%'    ,\r\n        height: 150,\r\n        margin: 'auto',\r\n        marginTop: 250,\r\n        position: 'relative'\r\n      }\r\n      const formStyle = {\r\n        \r\n      }\r\n\r\n\r\n    return (\r\n      <div onClick={this.handleClose} style={backgroundStyle}>\r\n        <div className=\"modal\" style={modalStyle}>\r\n        <h3 className=\"modal\">{this.props.modalMessage}</h3>\r\n                <form className=\"modal\" style={formStyle}><span>{this.props.ticker}</span>\r\n                    <input className=\"modal\" onChange={this.handleChange} type=\"number\" placeholder=\"Volume\"></input> <span className=\"modal\">{Math.round(this.props.price*this.state.volume)}$</span>\r\n                <button className=\"modal\" onClick={this.handleBuy}>Buy</button>\r\n            </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Buy\r\n","import React, { Component } from 'react'\r\nimport Buy from './modals/buy'\r\n\r\nclass Watchlist extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            ticker: '',\r\n            volume: 0,\r\n            showBuyModal: false,\r\n\r\n        }\r\n    }\r\n\r\ndeleteHandler = (e) => {\r\ne.preventDefault()\r\nthis.props.deleteStock(e.target.id)\r\n}\r\nshowGraphHandler = (e) => {\r\n  e.preventDefault()\r\n  console.log(e.target.name)\r\n  this.props.showGraph(e.target.name)\r\n}\r\nbuyHandler = (e) => {\r\n  e.preventDefault()\r\n  this.setState({\r\n    ...this.state, showBuyModal: !this.state.showBuyModal, ticker: e.target.name\r\n  })\r\n}\r\nmodalOK = () => {\r\n  this.setState({\r\n    showBuyModal: false\r\n  })\r\n}\r\n\r\n\r\n  render() {\r\n    if (this.state.showBuyModal) { return <Buy modalMessage = \"Enter Volume\" ticker = {this.state.ticker} \r\n        price = {this.props.watchlist[this.props.watchlist.findIndex(item => item.ticker === this.state.ticker)].prices[99]}\r\n      time={this.props.watchlist[this.props.watchlist.findIndex(item => item.ticker === this.state.ticker)].times[99]} \r\n        handleBuy={this.props.handleBuy} modalOK={this.modalOK}\r\n        updatePortfolioData={this.props.updatePortfolioData}\r\n        handleClose={this.modalOK}\r\n        />}\r\n\r\n    if (Object.keys(this.props.watchlist[0] !== undefined && this.props.watchlist[0]).length !== 0) {     // dont render if watchlist is empty object\r\n      return (<div>\r\n        <h2>Watchlist</h2>\r\n        <table className=\"watchlist\">\r\n          <thead>\r\n          <tr><th>Stock ticker:</th><th>Price:</th></tr>\r\n          </thead>\r\n          <tbody>{this.props.watchlist.map(asset => \r\n            (<tr key={asset.ticker} name={asset.ticker} onMouseOver={this.showGraphHandler}>\r\n              <td name={asset.ticker} className=\"ticker\">{asset.ticker}</td><td className=\"price\" name={asset.ticker}>${asset.prices[asset.prices.length-1]}</td>\r\n            <td><button className=\"Btn\" name={asset.ticker} onClick={this.buyHandler}>Buy</button></td>\r\n            </tr>)\r\n          )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )}\r\n    else if(this.props.stocks.length > 0) {return (\r\n      <div>\r\n      <table className=\"watchlist\">\r\n      <tbody>{this.props.stocks.map(asset =>\r\n        (<tr key={asset.ticker}>\r\n          <td className=\"ticker\">{asset.ticker}</td>\r\n          <td><button className=\"Btn\" id={asset.ticker} onClick={this.deleteHandler}>Remove from list</button></td>\r\n        </tr>)\r\n      )}\r\n      </tbody>\r\n      </table>\r\n      </div >)\r\n    }\r\n    else { return null}\r\n  }\r\n}\r\n\r\nexport default Watchlist\r\n","import React, { Component } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\n\r\nclass Graph extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            finalGraphData: {\r\n                labels: [],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Portfolio',\r\n                            data: [],\r\n                        }\r\n                    ]\r\n            },\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    render() { \r\n        if(Object.keys(this.props.graphData !== undefined && this.props.graphData).length !== 0) {\r\n    let portfolioData =  {\r\n            labels: this.props.graphData.times,\r\n                datasets: [\r\n                    {\r\n                        label: this.props.graphData.ticker,\r\n                        data: this.props.graphData.prices,\r\n                    }\r\n                ]\r\n        }\r\n        return (\r\n            <Line\r\n                data={portfolioData}\r\n                options={{\r\n                    title: {\r\n                        display: this.props.graphData.ticker,\r\n                        text: this.props.graphData.ticker,\r\n                        fontSize: 25\r\n                    },\r\n                    legend: {\r\n                        display: 'display',\r\n                        position: 'position'\r\n                            }\r\n                        }}\r\n                    />\r\n        )\r\n    }\r\n    else {\r\n            return null\r\n    }}\r\n}\r\n\r\nexport default Graph","import React, { Component } from 'react'\r\n\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ticker: '',\r\n            volume: 0\r\n        }\r\n    }\r\n\r\n    sellHandler = (e) => {\r\n        e.preventDefault()\r\n        this.props.sellStock(e.target.id)\r\n    }\r\n\r\nresults\r\n    render() {\r\n        const redStyle = {\r\n            color: '#f44242'\r\n        }\r\n        const greenStyle = {\r\n            color: '#28af16'\r\n        }\r\n\r\n        if (this.props.portfolio.length > 0) {\r\n            return (\r\n                <div className=\"watchlist-wrap\">\r\n                <h2>Portfolio</h2>\r\n                <table >\r\n                    <thead>\r\n                        <tr><th>Purchased(EST)</th><th>Stock</th><th>Volume</th><th>Purchase Price</th><th>Current Price</th>\r\n                        <th>Value</th> <th>yield %</th> <th>yield $</th></tr>\r\n                    </thead>\r\n                    <tbody>{this.props.portfolio.map(asset =>\r\n                        (<tr key={asset.ticker}>\r\n                            <td>{asset.timeOfPurchase}</td><td>{asset.ticker}</td><td>{asset.volume}</td><td>${asset.price}</td><td>${asset.currentPrice}</td>\r\n                            <td>${(Math.round(100 * asset.currentPrice * asset.volume)) / 100}</td>\r\n                            <td id=\"results1\" >%{(Math.round(100 * 100 * (asset.currentPrice / asset.price - 1))) /100}</td>\r\n                            <td style={greenStyle} id=\"results2\">${(Math.round(100 * (asset.currentPrice * asset.volume - asset.price * asset.volume))) / 100}</td>\r\n                            <td><button className=\"Btn\" id={asset.ticker} onClick={this.sellHandler}>Sell</button></td>\r\n                        </tr>)\r\n                    )}\r\n                        </tbody>\r\n                    </table>\r\n                    <table>\r\n                        <tbody>\r\n                            <h2>Portfolio Summary</h2>\r\n                            <tr><th>$ Invested</th><th>Current Value</th><th>yield %</th><th>yield $</th></tr>\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            )\r\n        }\r\n        else return (<div className=\"watchlist-wrap\"><h2>Portfolio is empty</h2></div>)\r\n    }\r\n}\r\n\r\nexport default Portfolio\r\n//style = if((asset.currentPrice / asset.price - 1) > 0) { redStyle }","import React, { Component } from 'react'\r\n\r\nclass Error extends Component {\r\n\r\n    handleClose = (e) => {\r\n        e.preventDefault()\r\n        console.log(e.target)\r\n        if (e.target.className !== 'modal') { this.props.handleClose() }\r\n    }\r\n\r\n    render() {\r\n        const backgroundStyle = {\r\n            position: 'absolute',\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            backgroundColor: 'rgba(0,0,0,0.5)'\r\n        }\r\n        const modalStyle = {\r\n            backgroundColor: '#fff',\r\n            width: '70%',\r\n            height: 150,\r\n            margin: 'auto',\r\n            marginTop: 250,\r\n            position: 'relative'\r\n        }\r\n\r\n\r\n        return (\r\n            <div onClick={this.handleClose} style={backgroundStyle}>\r\n                <div className=\"modal\" style={modalStyle}>\r\n                    <h3 className=\"modal\">{this.props.modalMessage}<span><button onClick={this.handleClose}>X</button></span></h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport Stockadder from './components/Stockadder'\r\nimport Watchlist from './components/Watchlist'\r\nimport Graph from './components/Graph'\r\nimport axios from 'axios'\r\nimport './css/main.css'\r\nimport Portfolio from './components/Portfolio'\r\nimport Error from './components/modals/error'\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.apiSummary = []\r\n        this.state = {\r\n            apiData: [],\r\n            stocks: [],\r\n            graphData: [{}],\r\n            stockDisplay: 0,\r\n            portfolio: [],\r\n            portfolioData: [],\r\n            portfolioIndexes: [],\r\n            showStockadder: true,\r\n            showError: false\r\n            \r\n        }\r\n    }\r\n    errorClose = () => {\r\n        this.setState({\r\n            showError: false\r\n        })\r\n    }\r\n\r\n    deleteStock = (stock) => {\r\n        this.setState({\r\n            stocks: this.state.stocks.filter(item => item.ticker !== stock)\r\n        })\r\n        }\r\n    addStock = (stock) => {    \r\n        if(this.state.stocks.length<5) {\r\n        this.setState({\r\n            stocks: this.state.stocks.concat(stock)\r\n        })\r\n    }\r\n    else {\r\n        alert('Maximum portfoliosize is 5')\r\n    }\r\n    \r\n}\r\n        addFive = () => {\r\n            this.setState({\r\n                stocks: [{ticker: 'TSLA'}, {ticker: 'AAPL'}, {ticker: 'GOOGL'}, {ticker: 'AMZN'}, {ticker: 'M&M'}]\r\n            })\r\n        \r\n        }\r\n\r\n    showGraph = (stock) => {\r\n        if(stock !== undefined){\r\n        this.setState({\r\n        stockDisplay: this.state.graphData.findIndex(item => item.ticker === stock)\r\n        })}\r\n    }\r\n\r\n    compare = (a, b) => {\r\n        if (a.ticker < b.ticker) { return -1 }\r\n        if (a.ticker > b.ticker) { return 1 }\r\n        return 0\r\n    }\r\n\r\n    handleBuy = (stock) => {\r\n        let newPort = this.state.portfolio.concat(stock)\r\n        newPort.sort(this.compare)\r\n        let portfolioIndexes = []\r\n            for (let i = 0; i < newPort.length; i++) {\r\n                for (let u = 0; u < this.state.graphData.length; u++) {\r\n                    if (newPort[i].ticker === this.state.graphData[u].ticker) {\r\n                        portfolioIndexes.push(u)\r\n                    }\r\n                }\r\n            }\r\n        this.setState({\r\n            portfolio: newPort,\r\n            portfolioIndexes\r\n        })\r\n        setTimeout(this.updatePortfolioData, 1000)\r\n    }\r\n    sellStock = (stock) => {\r\n        console.log(stock)\r\n    }\r\n\r\n    \r\n    updatePortfolioData = () => {\r\n        if(this.state.portfolio.length > 0) {\r\n        let portfolioData = []\r\n        let pricesSumArray = []\r\n        for (let i = 0; i < this.state.portfolioIndexes.length; i++) {\r\n            portfolioData[i] = {pricesProd: this.state.graphData[this.state.portfolioIndexes[i]].prices.map(price => price * this.state.portfolio[i].volume),\r\n                times: this.state.graphData[this.state.portfolioIndexes[i]].times}\r\n            }\r\n            for (let i = 0; i < portfolioData[0].pricesProd.length; i++) {\r\n                let priceSum = 0\r\n                for ( let u = 0; u < this.state.portfolio.length; u++) {\r\n                    priceSum = priceSum + portfolioData[u].pricesProd[i]\r\n                }\r\n                pricesSumArray.push(priceSum)  \r\n            }\r\n            this.setState({\r\n                portfolioData: {\r\n                    prices: pricesSumArray,\r\n                    times: portfolioData[0].times,\r\n                    ticker: 'Portfolio'\r\n                }\r\n            })\r\n        }\r\n        setInterval(this.updatePortfolioData, 64000)\r\n    }\r\n\r\n    updateStocks = async() => {\r\n        this.apiSummary = []\r\n        this.setState({\r\n            showStockadder: false,\r\n            apiData: [],\r\n            graphData: [{}]\r\n        })\r\n        const API_KEY = 'RNMW9AOG5O5M2LRV' //alphavantage.co\r\n        for( let i = 0; i < this.state.stocks.length; i++ ) {\r\n            await axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=${this.state.stocks[i].ticker}&interval=1min&apikey=${API_KEY}`).then(res => {\r\n                let prices = []\r\n                let times = Object.keys(res.data['Time Series (1min)']).reverse()\r\n                for (let u = 0; u < times.length; u++) {\r\n                    prices = prices.concat(Math.round(parseFloat(res.data['Time Series (1min)'][times[u]]['4. close']) * 1000)/1000)\r\n                }\r\n                this.apiSummary.push({                          // add stock data together\r\n                        times: times,\r\n                        prices: prices,\r\n                        volume: this.state.stocks[i].volume,\r\n                        ticker: this.state.stocks[i].ticker\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                this.setState({\r\n                        showError: 'too many api requests! this api-key supports up to 5 per minute',\r\n                        stocks: [],\r\n                        showStockadder: true\r\n                    })\r\n                })\r\n            }\r\n            \r\n            this.setState({                                     // set state after the api calls are all concluded to not set state once for every call\r\n                graphData: this.apiSummary,\r\n                 \r\n            })\r\n                if(this.state.graphData.length > 0) {\r\n                let portfolioCopy = [ ...this.state.portfolio ]\r\n                for (let i = 0; i < this.state.portfolio.length; i++) {\r\n                portfolioCopy[i].currentPrice = this.state.graphData[this.state.graphData.findIndex(item => item.ticker === portfolioCopy[i].ticker)].prices[99]               }\r\n                this.setState({\r\n                    portfolio: portfolioCopy\r\n                })}\r\n            setInterval(this.updateStocks, 64000)\r\n        }\r\n\r\n        render() { \r\n            return (\r\n                <div className=\"page-container\">\r\n                {(this.state.showError && <Error modalMessage={this.state.showError} handleClose={this.errorClose} />)}\r\n                    <h1><span>PORTFOLIO</span> TRACKER</h1>\r\n                        <div className=\"list-and-graph-wrap\">\r\n                            <div className=\"watchlist-wrap\">\r\n                                {this.state.showStockadder && <Stockadder stocks={this.state.stocks} addFive={this.addFive} addStock={this.addStock} updateStocks={this.updateStocks} />}\r\n                                < Watchlist stocks={this.state.stocks} watchlist={this.state.graphData} deleteStock={this.deleteStock} showGraph={this.showGraph} handleBuy={this.handleBuy} updatePortfolioData={this.updatePortfolioData} />\r\n                            </div>\r\n                            <div className=\"chart\">\r\n                                < Graph graphData={this.state.graphData[this.state.stockDisplay]} /> \r\n                            </div>\r\n                        </div>\r\n                    <div className=\"list-and-graph-wrap\">\r\n                        <div> \r\n                            <Portfolio portfolio={this.state.portfolio} graphData={this.state.graphData} sellStock={this.sellStock} /> \r\n                        </div>\r\n                        <div className=\"chart\">\r\n                        <Graph graphData={this.state.portfolioData} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    )\r\n        } }\r\nexport default App\r\n   // \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //    this.setPortfolioData()\r\n\r\n    // setPortfolioData = () => {\r\n    //     this.setState({\r\n    //         portfolioData:{\r\n    //             labels: this.state.portfolioData.labels.concat(this.state.apiData.labels[this.state.apiData.labels.length]),\r\n    //             datasets: [\r\n    //                 {\r\n    //                     label: 'Portfolio',\r\n    //                     data: this.state.portfolioData.datasets.data.concat(this.state.apiData.datasets.data[this.state.apiData.datasets.data.length]),\r\n    //                 }\r\n    //             ]\r\n    //         }\r\n    //     })\r\n    //     console.log(this.state.portfolioData)\r\n    // }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}